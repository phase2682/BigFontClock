#Dan Koellen AI6XG Jan 2020 

#construct big font for 4 line LCD
#build custom characters to build 4 line
#numbers 0 - 9 and the letter Z 

from LCD_2E_AI6XG import *



char_map = [									#custom characters
[0x00,0x00,0x00,0x00,0x01,0x07,0x0f,0x1f],		#bottom right triangle
[0x00,0x00,0x00,0x00,0x1f,0x1f,0x1f,0x1f],		#bottom block
[0x00,0x00,0x00,0x00,0x10,0x1c,0x1e,0x1f],		#bottom left triangle
[0x1f,0x0f,0x07,0x01,0x00,0x00,0x00,0x00],		#top right triangle
[0x1f,0x1e,0x1c,0x10,0x00,0x00,0x00,0x00],		#top left triangle
[0x1f,0x1f,0x1f,0x1f,0x00,0x00,0x00,0x00],		#upper block
[0x1f,0x1f,0x1e,0x1c,0x18,0x18,0x10,0x10],		#full top right triangle
[0x01,0x01,0x03,0x03,0x07,0x07,0x1f,0x1f]		#full bottom right triangle
]

char_gen = [									#generate characters 0 - 9 and "Z"
#organized by columns, 3 columns for each character, 1 row for each LCD line
#		0				1				2				3				4				5				6				7				8				9			Z (10)
[0x00,0x01,0x02, 0x00,0x01,0x20, 0x00,0x01,0x02, 0x00,0x01,0x02, 0x01,0x20,0x01, 0x01,0x01,0x01, 0x00,0x01,0x02, 0x01,0x01,0x01, 0x00,0x01,0x02, 0x00,0x01,0x02, 0x01,0x01,0x01],
[0xff,0x20,0xff, 0x20,0xff,0x20, 0x00,0x01,0xff, 0x20,0x01,0xff, 0xff,0x01,0xff, 0xff,0x01,0x01, 0xff,0x01,0x02, 0x20,0x00,0x06, 0xff,0x01,0xff, 0xff,0x20,0xff, 0x20,0x00,0x06],
[0xff,0x20,0xff, 0x20,0xff,0x20, 0xff,0x20,0x20, 0x20,0x20,0xff, 0x20,0x20,0xff, 0x20,0x20,0xff, 0xff,0x20,0xff, 0x20,0xff,0x20, 0xff,0x20,0xff, 0x03,0x05,0xff, 0x07,0x20,0x20],
[0x03,0x05,0x04, 0x20,0x05,0x20, 0x05,0x05,0x05, 0x03,0x05,0x04, 0x20,0x20,0x05, 0x04,0x05,0x05, 0x03,0x05,0x04, 0x20,0x05,0x20, 0x03,0x05,0x04, 0x20,0x20,0x05, 0x05,0x05,0x05]
]

#write big character at position left
#big_write(big, left)
def big_write(big, left):
	if big == "Z" or big == "z":
		big = 10
	lcd_goto(left, 0)							#go to left position row 1 LCD 0
	for i in range(big*3,big*3 + 3):
		lcd_putch(char_gen[0][i],0)
		
	lcd_goto(left + 0x40, 0)					#go to left position row 2 LCD 0
	for i in range(big*3,big*3 + 3):
		lcd_putch(char_gen[1][i],0)
		
	lcd_goto(left, 1)							#go to left position row 1 LCD 1
	for i in range(big*3,big*3 + 3):
		lcd_putch(char_gen[2][i],1)
		
	lcd_goto(left + 0x40, 1)					#go to left position row 2 LCD 1
	for i in range(big*3,big*3 + 3):
		lcd_putch(char_gen[3][i],1)
		
#generates custom characters in CGRAM 0 - 7
#this function must be run before using big_write(big, left)
def generate_big():
	for j in range(8):
		lcd_cust_char(j, char_map[j], 0)		#LCD0
		lcd_cust_char(j, char_map[j], 1)		#LCD1
	
